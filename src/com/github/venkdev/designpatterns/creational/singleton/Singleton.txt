Conditions
1. Private constructor to restrict instantiation of the class from other classes.
2. Private static variable of the same class that is the only instance of the class.
3. Public static method that returns the instance of the class, this is the global access point for outer world to get the instance of the singleton class.

DCL method for thread safety.
Bill Pugh technique to overcome certain thread safety limitations faced in DCL.
When the singleton class is loaded, inner class is not loaded and hence does not create object when loading the class.
Inner class is created only when getInstance() method is called.

Eager initialization is easy to implement but it may cause resource and CPU time wastage. Use it only if cost of initializing a class is less in terms of resources or your program will always need the instance of class.
By using Static block in Eager initialization we can provide exception handling and also can control over instance.
Using synchronized we can create singleton class in multi-threading environment also but it can cause slow performance, so we can use Double check locking mechanism.
Bill Pugh implementation is most widely used approach for singleton classes. Most developers prefer it because of its simplicity and advantages.